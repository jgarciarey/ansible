---
- hosts: all
  become: true
  tasks:
      # Install PHP
    - name: Add the ondrej PHP PPA
      apt_repository: repo='ppa:ondrej/php'

    - name: Update the apt cache
      apt: update_cache=yes cache_valid_time=3600

    - name: Install required tools
      apt: 
        name:
          - unzip
        state: present
        allow_unauthenticated: yes
        force: true

    - name: Install PHP
      apt: 
        name:
          - php
          - php-fpm
          - php-mysql
          - php-xml
        state: present
       
    - name: Remove apache2
      apt: name=apache2 state=absent

      # MySQL
    - name: Install MySQL
      apt: 
        name:
          - mysql-server-5.6
          - python-mysqldb 
        state: present

    - name: Generate new root password
      command: openssl rand -hex 7 creates=/root/.my.cnf
      register: mysql_new_root_pass # Guarda el valor de command en una variable

    # If /root/.my.cnf doesn't exist and the command is run
    - debug: msg="New root password is {{mysql_new_root_pass.stdout}}"
      when: mysql_new_root_pass.changed

    # If /root/.my.cnf exists and the command is not run
    - debug: msg="No change to root password"
      when: not mysql_new_root_pass.changed

    - name: Remove anonymous users
      mysql_user: name="" state=absent
      when: mysql_new_root_pass.changed

    - name: Remove test database
      mysql_db: name=test state=absent
      when: mysql_new_root_pass.changed

    - name: Update root password
      mysql_user: name=root host={{item}} password={{mysql_new_root_pass.stdout}}
      with_items:
        - "{{ansible_hostname}}"
      when: mysql_new_root_pass.changed

    - name: Create my.cnf
      template: src=templates/mysql/my.cnf dest=/root/.my.cnf
      when: mysql_new_root_pass.changed

      # Install Nginx
    - name: Install nginx
      apt: name=nginx state=latest allow_unauthenticated=yes force=true

    - name: Start nginx
      service: name=nginx state=started

    - name: Create ngix config
      template: src=templates/nginx/default dest=/etc/nginx/sites-available/default
      notify: Restart nginx

    - name: Copy wordpress.zip in tmp
      copy: src=files/wordpress.zip dest=/tmp/wordpress.zip

    - name: Unzip wordpress
      unarchive: src=/tmp/wordpress.zip dest=/tmp creates=/tmp/wordpress/wp-settings.php copy=no

    - name: Create project folder
      file: dest=/var/www/book.example.com state=directory

    - name: Copy wordpress files
      command: cp -a /tmp/wordpress/. /var/www/book.example.com creates=/var/www/book.example.com/wp-settings.php

    - name: Create WordPress MySQL database
      mysql_db: name=wordpress state=present

    - name: Create WordPress MySQL user
      mysql_user: name=wordpress host=localhost password=bananas priv=wordpress.*:ALL

    #- name: Create wp-config.php
    #  template: src=templates/wordpress/wp-config.php dest=/var/www/book.example.com/wp-config.php






  handlers:
    - name: Restart nginx
      service: name=nginx state=restarted






